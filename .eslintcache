[{"D:\\github\\employees\\src\\index.js":"1","D:\\github\\employees\\src\\reportWebVitals.js":"2","D:\\github\\employees\\src\\App.js":"3","D:\\github\\employees\\src\\Employee\\Employee.js":"4","D:\\github\\employees\\src\\Employee\\ListOfEmployees.js":"5","D:\\github\\employees\\src\\BirthDayEmployee\\BDayEmployee.js":"6","D:\\github\\employees\\src\\BirthDayEmployee\\ListOfBDayEmployees.js":"7"},{"size":455,"mtime":1606771434549,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":1311,"mtime":1607390840423,"results":"11","hashOfConfig":"9"},{"size":1186,"mtime":1607389927235,"results":"12","hashOfConfig":"9"},{"size":1459,"mtime":1607390189765,"results":"13","hashOfConfig":"9"},{"size":793,"mtime":1607390826300,"results":"14","hashOfConfig":"9"},{"size":1933,"mtime":1607390109981,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"15xbspe",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"D:\\github\\employees\\src\\index.js",[],["34","35"],"D:\\github\\employees\\src\\reportWebVitals.js",[],["36","37"],"D:\\github\\employees\\src\\App.js",[],"D:\\github\\employees\\src\\Employee\\Employee.js",[],"D:\\github\\employees\\src\\Employee\\ListOfEmployees.js",[],"D:\\github\\employees\\src\\BirthDayEmployee\\BDayEmployee.js",["38","39"],"import React, {useState, useContext} from \"react\";\r\nimport {Context} from \"../App\";\r\n\r\nfunction BDayEmployee(props){\r\n\r\n    const value = useContext(Context);\r\n\r\n    const [employee, setEmployee] = useState({\r\n        id: props.id,\r\n        firstName: props.firstName,\r\n        lastName: props.lastName,\r\n        bdate: props.bdate\r\n    });\r\n\r\n    let mounths = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    let date = new Date(employee.bdate);\r\n\r\n\r\n    return (\r\n        <div className=\"inline\">\r\n            {employee.lastName + ' ' + employee.firstName + \" - \" + date.getDate() + \" \" + mounths[date.getMonth()] + \", \" + date.getFullYear() + \" year\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BDayEmployee;","D:\\github\\employees\\src\\BirthDayEmployee\\ListOfBDayEmployees.js",["40"],"import React, {useContext, useEffect} from \"react\";\r\nimport BDayEmployee from \"./BDayEmployee\";\r\n\r\nimport {Context} from \"../App\";\r\n\r\nfunction ListOfEmployees() {\r\n        \r\n    const value = useContext(Context);\r\n    let mounths = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n    useEffect(() => {\r\n        \r\n    }, value.selectedEmployees);\r\n\r\n    return (\r\n            <div className=\"BDaysBlock\">\r\n            {\r\n            ((value.employees.filter((element) => element.isSelected)).length > 0) ?\r\n            <div>\r\n            { \r\n                mounths.map((mounth, index) => {\r\n                  let list = value.employees.filter((element) => element.isSelected).filter((element) => new Date(element.dob).getMonth() === index);\r\n                  if(list.length > 0){\r\n                    return (\r\n                        <div>\r\n                            <h3>{mounth}</h3>\r\n                            {\r\n                                list.map((employee) => {\r\n                                    return (\r\n                                        <BDayEmployee \r\n                                          key={employee.id}\r\n                                          id={employee.id}\r\n                                          firstName={employee.firstName}\r\n                                          lastName={employee.lastName}\r\n                                          bdate={employee.dob}\r\n                                        />\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    )\r\n                  }\r\n                  return null;\r\n                })\r\n            } \r\n            </div>\r\n            : <span>No selected employees</span>\r\n            }\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default ListOfEmployees;",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"41","replacedBy":"45"},{"ruleId":"43","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":6,"column":11,"nodeType":"49","messageId":"50","endLine":6,"endColumn":16},{"ruleId":"47","severity":1,"message":"51","line":8,"column":22,"nodeType":"49","messageId":"50","endLine":8,"endColumn":33},{"ruleId":"52","severity":1,"message":"53","line":13,"column":8,"nodeType":"54","endLine":13,"endColumn":31},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],["55"],["56"],"no-unused-vars","'value' is assigned a value but never used.","Identifier","unusedVar","'setEmployee' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","MemberExpression","no-global-assign","no-unsafe-negation"]